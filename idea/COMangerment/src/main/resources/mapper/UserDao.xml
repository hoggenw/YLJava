<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace = "com.hoggen.COMangerment.dao.UserDao">

	<resultMap id="userMap" type="com.hoggen.COMangerment.entity.User">
		<id column="user_id" property="userId" />
		<result column="p_id" property="pId" />
		<result column="mobile" property="mobile" />
		<result column="real_name" property="realName" />
        <result column="status" property="status" />
        <result column="sex" property="sex" />
        <result column="integral" property="integral" />
        <result column="address" property="address" />
        <result column="create_time" property="createTime" />
        <result column="remark" property="remark" />
        <result column="birthday" property="birthday" />
	</resultMap>


    <select id="queryByUserMobile" resultType="com.hoggen.COMangerment.entity.User" parameterType="String">
        SELECT
        user_id,
        p_id,
        mobile,
        real_name,
        status,
        sex,
        integral,
        create_time,
        remark,
        address,
        birthday,
        create_by
        FROM
        tb_user
        WHERE
		mobile = #{mobile}
    </select>


    <select id="queryByUserId" resultType="com.hoggen.COMangerment.entity.User" parameterType="Long">
        SELECT
        user_id,
        p_id,
        mobile,
        real_name,
        status,
        sex,
        integral,
        create_time,
        remark,
        address,
        birthday,
        create_by
        FROM
        tb_user
        WHERE
		user_id = #{userId}
    </select>


    <insert id="insertUser" parameterType="com.hoggen.COMangerment.entity.User"
		useGeneratedKeys="true" keyProperty="userId" keyColumn="user_id">
		INSERT INTO
		tb_user(p_id,mobile,real_name,
		sex,integral,status,
		create_time,remark,address,birthday,create_by)
		VALUES
		(#{pId},#{mobile},#{realName},
		#{sex},#{integral},#{status},#{createTime},
		#{remark},#{address},#{birthday},#{createBy})
	</insert>


	<update id="updateUser" parameterType="com.hoggen.COMangerment.entity.User"
		keyProperty="userId" keyColumn="user_id" useGeneratedKeys="true">
		UPDATE tb_user
		<set>
			<if test="pId != null">p_id=#{pId},</if>
			<if test="mobile != null">mobile=#{mobile},</if>
			<if test="realName != null">real_name=#{realName},</if>
			<if test="sex != null">sex=#{sex},</if>
			<if test="integral != null">integral=#{integral},</if>
			<if test="status != null">status=#{status},</if>
			<if test="remark != null">remark=#{remark},</if>
            <if test="address != null">address=#{address},</if>
            <if test="birthday != null">birthday=#{birthday},</if>
		</set>
		WHERE user_id = #{userId}
	</update>

    <delete id="deleteUserId">
		DELETE FROM
		tb_user
		WHERE
		user_id =
		#{userId}
	</delete>


	<select id="queryUserList" resultMap="userMap">
		SELECT
        user_id,
        p_id,
        mobile,
        real_name,
        status,
        sex,
        integral,
        create_time,
        remark,
        address,
        birthday
		FROM
		tb_user
		<where>
			<if
				test="userCondition!=null
				 and userCondition.realName!=null">
				and real_name like '%${userCondition.realName}%'
			</if>
			<if
				test="userCondition!=null
				 and userCondition.status!=null">
				and status =
				#{userCondition.status}
			</if>

            <if
                    test="userCondition!=null
				 and userCondition.mobile!=null">
                and mobile like '%${userCondition.mobile}%'
            </if>

		</where>
		LIMIT #{rowIndex},#{pageSize};
	</select>


	<select id="queryUserCount" resultType="int">
		SELECT count(1)
		FROM
		tb_user
		<where>
            <if
                    test="userCondition!=null
				 and userCondition.realName!=null">
                and real_name like '%${userCondition.realName}%'
            </if>
            <if
                    test="userCondition!=null
				 and userCondition.status!=null">
                and status =
                #{userCondition.status}
            </if>

            <if
                    test="userCondition!=null
				 and userCondition.mobile!=null">
                and mobile like '%${userCondition.mobile}%'
            </if>
		</where>

	</select>
    
</mapper>