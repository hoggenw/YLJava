<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="com.hoggen.sublimation.dao.FriendshipApplyDao">

    <resultMap type="com.hoggen.sublimation.dto.FriendshipDTO" id="FriendshipDTOResultMap">
        <id property="id" column="id" />
        <result property="status" column="status" />


        <!-- 配置一对多的关系
            property：填写pojo类中集合类类属性的名称
            javaType：填写集合类型的名称
        -->
        <collection property="users" javaType="list" ofType="com.hoggen.sublimation.dto.UserModelDTO">
            <!-- 配置主键，是关联的唯一标识 -->
            <id property="userId" column="user_id" />
            <result property="name" column="user_name" />
            <result property="avatar" column="avatar" />
        </collection>
    </resultMap>



    <insert id="insertFriendship" parameterType="com.hoggen.sublimation.entity.FriendshipApply"
            useGeneratedKeys="true" keyProperty="id" keyColumn="id">

        <selectKey  keyProperty="id" resultType="java.lang.String" order="BEFORE">
            select uuid()
        </selectKey>
        <!--<selectKey keyProperty="userId" order="AFTER" resultType="java.lang.String">-->
        <!--&lt;!&ndash; SELECT LAST_INSERT_ID()：得到刚insert到数据表中的记录的主键值，只适用于自增主键 &ndash;&gt;-->
        <!--SELECT LAST_INSERT_ID()-->
        <!--</selectKey>-->
        INSERT INTO
        tb_friendship_apply(
        id,
        user_id,
        friend_id,
        status,
        create_time)
        VALUES
        (#{userId},#{friendId},#{status},#{createTime})
    </insert>


    <update id="updateFriendship" parameterType="com.hoggen.sublimation.entity.FriendshipApply"
            keyProperty="id" keyColumn="id" useGeneratedKeys="true">
        UPDATE tb_friendship_apply
        <set>
            <if test="status != null">status=#{status},</if>
            <if test="delete != null">delete=#{delete},</if>
        </set>
        WHERE id = #{id}
    </update>
    <select id="queryUserList" resultMap="FriendshipDTOResultMap"
            parameterType="String">
        <!-- 具体的sql -->
        SELECT
        p.id,
        p.user_id,
        p.friend_id,
        p.status,

        p1.user_id,
        p1.user_name,
        p1.avatar

        FROM
        tb_friendship_apply as p
        LEFT JOIN tb_user as p1 ON
       <choose>
        <when test="p.user_id!= userId ">
            p1.user_id = p.user_id,
        </when>
        <otherwise>
            p1.user_id = p.friend_id,
        </otherwise>
      </choose>
        WHERE 1=1
        AND (p.user_id =
        #{userId}
        or p.friend_id =
        #{userId} )
    </select>


</mapper>
